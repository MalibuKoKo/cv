{
  "$schema": "https://raw.githubusercontent.com/jetify-com/devbox/0.14.2/.schema/devbox.schema.json",
  "packages": [
    "oci-cli@latest",
    "terraform@1.11.4",
    "hostctl@1.1.4",
    "jq@1.7.1",
    "aws-vault@7.2.0",
    "awscli2@2.25.5",
    "git-filter-repo@2.45.0"
  ],
  "shell": {
    "init_hook": [
      "echo 'Welcome to devbox!' > /dev/null"
    ],
    "scripts": {
      "test": [
        "echo \"Error: no test specified\" && exit 1"
      ],
      "certbot": [
        "docker rm -f certbot-curl-base",
        "docker run -it --name certbot-curl-base --entrypoint=sh certbot/certbot -c 'apk add --no-cache curl'",
        "docker commit certbot-curl-base my-certbot-with-curl",
        "domain=$(grep -Po 'dns_record_a\\s+=\\s+\"\\K([^\"]+)' infra/terraform.tfvars).$(grep -Po 'domain_name\\s+=\\s+\"\\K([^\"]+)' infra/terraform.tfvars)",
        "email=$(grep -Po 'email\\s+=\\s+\"\\K([^\"]+)' infra/terraform.tfvars)",
        "docker run -it --rm -e HOSTINGER_TOKEN=${HOSTINGER_TOKEN} --entrypoint=certbot --volume ./infra/certs:/tmp/config/letsencrypt --volume $(pwd)/create-dns-txt.sh:/sbin/create-dns-txt.sh --user $(id -u):$(id -g) docker.io/library/my-certbot-with-curl:latest certonly --manual-auth-hook /sbin/create-dns-txt.sh --manual --preferred-challenges=dns --no-eff-email --agree-tos -m $email -d $domain --config-dir /tmp/config/letsencrypt --work-dir /tmp/work/letsencrypt --logs-dir /tmp/log/letsencrypt"
      ],
      "build": [
        "echo $GHCR_PAT | docker login ghcr.io -u malibukoko --password-stdin",
        "docker buildx use cv||docker buildx create --name cv --use",
        "export DOCKER_TAG=$(cat VERSION)",
        "docker buildx build --platform linux/amd64,linux/arm64 --secret id=maxmind_creds,src=maxmind_creds.txt -t ghcr.io/malibukoko/cv:${DOCKER_TAG} -f build/Dockerfile --push ."
      ],
      "dl-maxmind": [
        "MAXMIND_CREDS=$(cat maxmind_creds.txt)",
        "curl -sSLo /tmp/GeoLite2-Country.tar.gz -u \"${MAXMIND_CREDS}\" \"https://download.maxmind.com/geoip/databases/GeoLite2-Country/download?edition_id=GeoLite2-Country&suffix=tar.gz\"",
        "cat /tmp/GeoLite2-Country.tar.gz"
      ],
      "tfstate": [
        "git add infra/terraform.tfstate*",
        "git commit -m \"chore: mise Ã  jour du fichiers terraform.tfstate*\""
      ],
      "bump": [
        "git pull",
        "git fetch --all --tags",
        "cz bump --changelog",
        "git push origin $(git tag --sort v:refname | cat | tail -n 1)",
        "git push origin"
      ],
      "bump_patch": [
        "git pull",
        "git fetch --all --tags",
        "cz bump --changelog --increment PATCH",
        "git push origin $(git tag --sort v:refname | cat | tail -n 1)",
        "git push origin"
      ],
      "bump_minor": [
        "git pull",
        "git fetch --all --tags",
        "cz bump --changelog --increment MINOR",
        "git push origin $(git tag --sort v:refname | cat | tail -n 1)",
        "git push origin"
      ],
      "bump_major": [
        "git pull",
        "git fetch --all --tags",
        "cz bump --changelog --increment MAJOR",
        "git push origin $(git tag --sort v:refname | cat | tail -n 1)",
        "git push origin"
      ]
    }
  }
}
